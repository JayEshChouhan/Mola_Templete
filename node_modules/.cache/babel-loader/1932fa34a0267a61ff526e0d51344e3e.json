{"ast":null,"code":"const initialState = {\n  CounterNum: 10\n};\nexport function Reducer1() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        CounterNum: state.CounterNum + 1\n      };\n\n    default:\n      return state;\n  }\n}\n_c = Reducer1;\nexport function Reducer2() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 1\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENTBYCUSTOM\":\n      return { ...state,\n        count: state.count + action.payload.no\n      };\n\n    default:\n      return state;\n  }\n}\n_c2 = Reducer2;\nexport default Reducer1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reducer1\");\n$RefreshReg$(_c2, \"Reducer2\");","map":{"version":3,"sources":["/home/my/jayesh/test-app2/test-app2/src/redux/reducer/reducer.js"],"names":["initialState","CounterNum","Reducer1","state","action","type","Reducer2","count","payload","no"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AADK,CAArB;AAIA,OAAO,SAASC,QAAT,GAA+C;AAAA,MAA7BC,KAA6B,uEAArBH,YAAqB;AAAA,MAAPI,MAAO;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmB;AAA1C,OAAP;;AACJ;AACI,aAAOE,KAAP;AAJR;AAMH;KAPeD,Q;AAQhB,OAAO,SAASI,QAAT,GAA4C;AAAA,MAA1BH,KAA0B,uEAAlB;AAACI,IAAAA,KAAK,EAAC;AAAP,GAAkB;AAAA,MAAPH,MAAO;;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAUI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcH,MAAM,CAACI,OAAP,CAAeC;AAA9C,OAAP;;AACJ;AACI,aAAON,KAAP;AAJR;AAMH;MAPeG,Q;AAQhB,eAAeJ,QAAf","sourcesContent":["\nconst initialState = {\n    CounterNum: 10,\n};\n\nexport function Reducer1(state = initialState, action){\n    switch(action.type){\n        case \"INCREMENT\": \n            return {...state, CounterNum: state.CounterNum + 1};\n        default:\n            return state;\n    }\n}\nexport function Reducer2(state = {count:1}, action){\n    switch(action.type){\n        case \"INCREMENTBYCUSTOM\": \n            return {...state,count: state.count + action.payload.no};\n        default:\n            return state;\n    }\n}\nexport default Reducer1;"]},"metadata":{},"sourceType":"module"}