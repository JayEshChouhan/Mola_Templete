{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { runGetApi, runPostApi } from \"../api\";\nimport { SetAccessToken } from \"../base\";\nexport async function LoginApi(data) {\n  _s();\n\n  const result = await runPostApi(\"api/token/\", data);\n  useDispatch({\n    type: \"ATHANTICATION\",\n    payload: {\n      no: result.status\n    }\n  });\n\n  if (result.status) {\n    toast.success(\"Login Successfully\");\n    var auth = result.status;\n    console.log(auth);\n    await LoginUserApi(auth);\n  } else {\n    if (!result.data.status) {\n      if (result.data.email) {\n        toast.error(\"Email \" + result.data.email[0]);\n      } else if (result.data.password) {\n        toast.error(\"Password \" + result.data.password[0]);\n      } else {\n        toast.error(result.data.detail);\n      }\n    }\n  }\n\n  let AuthStr = result.data.access;\n  console.log(AuthStr);\n  SetAccessToken(AuthStr);\n  return result;\n}\n\n_s(LoginApi, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginApi;\nexport async function LoginUserApi(auth) {\n  const res = await runGetApi(\"api/user/\", {}, auth);\n  console.log(auth);\n  const userData = JSON.stringify(res.data);\n  localStorage.setItem(\"userData\", userData);\n  return res;\n}\n_c2 = LoginUserApi;\nexport async function SinginApi(data) {\n  const result = await runPostApi(\"api/user/\", data);\n  let AuthStr = result.data.access;\n  console.log(result.data.access);\n  localStorage.setItem(\"AccessToken\", AuthStr);\n  return result;\n}\n_c3 = SinginApi;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginApi\");\n$RefreshReg$(_c2, \"LoginUserApi\");\n$RefreshReg$(_c3, \"SinginApi\");","map":{"version":3,"sources":["/home/my/jayesh/test-app2/test-app2/src/api/login/login.js"],"names":["useDispatch","toast","runGetApi","runPostApi","SetAccessToken","LoginApi","data","result","type","payload","no","status","success","auth","console","log","LoginUserApi","email","error","password","detail","AuthStr","access","res","userData","JSON","stringify","localStorage","setItem","SinginApi"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,QAAtC;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEA,OAAO,eAAeC,QAAf,CAAwBC,IAAxB,EAA8B;AAAA;;AACjC,QAAMC,MAAM,GAAG,MAAMJ,UAAU,CAAC,YAAD,EAAeG,IAAf,CAA/B;AACAN,EAAAA,WAAW,CAAC;AAACQ,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAE;AAACC,MAAAA,EAAE,EAACH,MAAM,CAACI;AAAX;AAAjC,GAAD,CAAX;;AACA,MAAGJ,MAAM,CAACI,MAAV,EAAiB;AACbV,IAAAA,KAAK,CAACW,OAAN,CAAc,oBAAd;AACA,QAAIC,IAAI,GAAGN,MAAM,CAACI,MAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,YAAY,CAACH,IAAD,CAAlB;AACH,GALD,MAKK;AACD,QAAG,CAACN,MAAM,CAACD,IAAP,CAAYK,MAAhB,EAAuB;AACnB,UAAIJ,MAAM,CAACD,IAAP,CAAYW,KAAhB,EAAsB;AAClBhB,QAAAA,KAAK,CAACiB,KAAN,CAAY,WAASX,MAAM,CAACD,IAAP,CAAYW,KAAZ,CAAkB,CAAlB,CAArB;AACH,OAFD,MAEO,IAAIV,MAAM,CAACD,IAAP,CAAYa,QAAhB,EAAyB;AAC5BlB,QAAAA,KAAK,CAACiB,KAAN,CAAY,cAAYX,MAAM,CAACD,IAAP,CAAYa,QAAZ,CAAqB,CAArB,CAAxB;AACH,OAFM,MAED;AACFlB,QAAAA,KAAK,CAACiB,KAAN,CAAYX,MAAM,CAACD,IAAP,CAAYc,MAAxB;AACH;AACJ;AAEJ;;AACD,MAAIC,OAAO,GAAGd,MAAM,CAACD,IAAP,CAAYgB,MAA1B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACAjB,EAAAA,cAAc,CAACiB,OAAD,CAAd;AACA,SAAOd,MAAP;AACH;;GAxBqBF,Q;UAElBL,W;;;KAFkBK,Q;AA0BtB,OAAO,eAAeW,YAAf,CAA4BH,IAA5B,EAAkC;AACrC,QAAMU,GAAG,GAAG,MAAMrB,SAAS,CAAC,WAAD,EAAc,EAAd,EAAmBW,IAAnB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMW,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACjB,IAAnB,CAAjB;AACAqB,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,QAAjC;AACA,SAAOD,GAAP;AACH;MANqBP,Y;AAStB,OAAO,eAAea,SAAf,CAAyBvB,IAAzB,EAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMJ,UAAU,CAAC,WAAD,EAAcG,IAAd,CAA/B;AACA,MAAIe,OAAO,GAAGd,MAAM,CAACD,IAAP,CAAYgB,MAA1B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACD,IAAP,CAAYgB,MAAxB;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCP,OAApC;AACA,SAAOd,MAAP;AACH;MANqBsB,S","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { runGetApi, runPostApi } from \"../api\";\nimport { SetAccessToken } from \"../base\";\n\nexport async function LoginApi(data) {\n    const result = await runPostApi(\"api/token/\", data);\n    useDispatch({type: \"ATHANTICATION\" ,payload: {no:result.status}});\n    if(result.status){\n        toast.success(\"Login Successfully\");\n        var auth = result.status;\n        console.log(auth);\n        await LoginUserApi(auth);\n    }else{\n        if(!result.data.status){\n            if (result.data.email){\n                toast.error(\"Email \"+result.data.email[0]);\n            } else if (result.data.password){\n                toast.error(\"Password \"+result.data.password[0]);\n            } else{\n                toast.error(result.data.detail);\n            }\n        }\n        \n    }\n    let AuthStr = result.data.access;\n    console.log(AuthStr);\n    SetAccessToken(AuthStr)\n    return result;\n}\n\nexport async function LoginUserApi(auth) {\n    const res = await runGetApi(\"api/user/\", {} , auth);\n    console.log(auth);\n    const userData = JSON.stringify(res.data)\n    localStorage.setItem(\"userData\", userData);\n    return res;\n}\n\n\nexport async function SinginApi(data) {\n    const result = await runPostApi(\"api/user/\", data);\n    let AuthStr = result.data.access;\n    console.log(result.data.access);\n    localStorage.setItem(\"AccessToken\", AuthStr);\n    return result;\n}"]},"metadata":{},"sourceType":"module"}