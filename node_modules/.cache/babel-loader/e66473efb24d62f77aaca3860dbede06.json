{"ast":null,"code":"/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/bootstrap-input-spinner\n * License: MIT, see file 'LICENSE'\n */\n;\n\n(function ($) {\n  \"use strict\"; // the default editor for parsing and rendering\n\n  var I18nEditor = function (props, element) {\n    var locale = props.locale || \"en-US\";\n\n    this.parse = function (customFormat) {\n      var numberFormat = new Intl.NumberFormat(locale);\n      var thousandSeparator = numberFormat.format(11111).replace(/1/g, '') || '.';\n      var decimalSeparator = numberFormat.format(1.1).replace(/1/g, '');\n      return parseFloat(customFormat.replace(new RegExp(' ', 'g'), '').replace(new RegExp('\\\\' + thousandSeparator, 'g'), '').replace(new RegExp('\\\\' + decimalSeparator), '.'));\n    };\n\n    this.render = function (number) {\n      var decimals = parseInt(element.getAttribute(\"data-decimals\")) || 0;\n      var digitGrouping = !(element.getAttribute(\"data-digit-grouping\") === \"false\");\n      var numberFormat = new Intl.NumberFormat(locale, {\n        minimumFractionDigits: decimals,\n        maximumFractionDigits: decimals,\n        useGrouping: digitGrouping\n      });\n      return numberFormat.format(number);\n    };\n  };\n\n  var triggerKeyPressed = false;\n  var originalVal = $.fn.val;\n\n  $.fn.val = function (value) {\n    if (arguments.length >= 1) {\n      for (var i = 0; i < this.length; i++) {\n        if (this[i][\"bootstrap-input-spinner\"] && this[i].setValue) {\n          this[i].setValue(value);\n        }\n      }\n    }\n\n    return originalVal.apply(this, arguments);\n  };\n\n  $.fn.inputSpinner = function (methodOrProps) {\n    if (methodOrProps === \"destroy\") {\n      this.each(function () {\n        if (this[\"bootstrap-input-spinner\"]) {\n          this.destroyInputSpinner();\n        } else {\n          console.warn(\"element\", this, \"is no bootstrap-input-spinner\");\n        }\n      });\n      return this;\n    }\n\n    var props = {\n      decrementButton: \"<strong>&minus;</strong>\",\n      // button text\n      incrementButton: \"<strong>&plus;</strong>\",\n      // ..\n      groupClass: \"\",\n      // css class of the resulting input-group\n      buttonsClass: \"btn-outline-secondary\",\n      buttonsWidth: \"2.5rem\",\n      textAlign: \"center\",\n      // alignment of the entered number\n      autoDelay: 500,\n      // ms threshold before auto value change\n      autoInterval: 50,\n      // speed of auto value change, set to `undefined` to disable auto-change\n      buttonsOnly: false,\n      // set this `true` to disable the possibility to enter or paste the number via keyboard\n      keyboardStepping: true,\n      // set this to `false` to disallow the use of the up and down arrow keys to step\n      locale: navigator.language,\n      // the locale, per default detected automatically from the browser\n      editor: I18nEditor,\n      // the editor (parsing and rendering of the input)\n      template: // the template of the input\n      '<div class=\"input-group ${groupClass}\">' + '<button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-decrement ${buttonsClass} btn-minus\" type=\"button\">${decrementButton}</button>' + '<input type=\"text\" inputmode=\"decimal\" style=\"text-align: ${textAlign}\" class=\"form-control form-control-text-input\"/>' + '<button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-increment ${buttonsClass} btn-plus\" type=\"button\">${incrementButton}</button>' + '</div>'\n    };\n\n    for (var option in methodOrProps) {\n      // noinspection JSUnfilteredForInLoop\n      props[option] = methodOrProps[option];\n    }\n\n    var html = props.template.replace(/\\${groupClass}/g, props.groupClass).replace(/\\${buttonsWidth}/g, props.buttonsWidth).replace(/\\${buttonsClass}/g, props.buttonsClass).replace(/\\${decrementButton}/g, props.decrementButton).replace(/\\${incrementButton}/g, props.incrementButton).replace(/\\${textAlign}/g, props.textAlign);\n    this.each(function () {\n      if (this[\"bootstrap-input-spinner\"]) {\n        console.warn(\"element\", this, \"is already a bootstrap-input-spinner\");\n      } else {\n        var $original = $(this);\n        $original[0][\"bootstrap-input-spinner\"] = true;\n        $original.hide();\n        $original[0].inputSpinnerEditor = new props.editor(props, this);\n        var autoDelayHandler = null;\n        var autoIntervalHandler = null;\n        var $inputGroup = $(html);\n        var $buttonDecrement = $inputGroup.find(\".btn-decrement\");\n        var $buttonIncrement = $inputGroup.find(\".btn-increment\");\n        var $input = $inputGroup.find(\"input\");\n        var $label = $(\"label[for='\" + $original.attr(\"id\") + \"']\");\n\n        if (!$label[0]) {\n          $label = $original.closest(\"label\");\n        }\n\n        var min = null;\n        var max = null;\n        var step = null;\n        updateAttributes();\n        var value = parseFloat($original[0].value);\n        var pointerState = false;\n        var prefix = $original.attr(\"data-prefix\") || \"\";\n        var suffix = $original.attr(\"data-suffix\") || \"\";\n\n        if (prefix) {\n          var prefixElement = $('<span class=\"input-group-text\">' + prefix + '</span>');\n          $inputGroup.find(\"input\").before(prefixElement);\n        }\n\n        if (suffix) {\n          var suffixElement = $('<span class=\"input-group-text\">' + suffix + '</span>');\n          $inputGroup.find(\"input\").after(suffixElement);\n        }\n\n        $original[0].setValue = function (newValue) {\n          setValue(newValue);\n        };\n\n        $original[0].destroyInputSpinner = function () {\n          destroy();\n        };\n\n        var observer = new MutationObserver(function () {\n          updateAttributes();\n          setValue(value, true);\n        });\n        observer.observe($original[0], {\n          attributes: true\n        });\n        $original.after($inputGroup);\n        setValue(value);\n        $input.on(\"paste input change focusout\", function (event) {\n          var newValue = $input[0].value;\n          var focusOut = event.type === \"focusout\";\n          newValue = $original[0].inputSpinnerEditor.parse(newValue);\n          setValue(newValue, focusOut);\n          dispatchEvent($original, event.type);\n        }).on(\"keydown\", function (event) {\n          if (props.keyboardStepping) {\n            if (event.which === 38) {\n              // up arrow pressed\n              event.preventDefault();\n\n              if (!$buttonDecrement.prop(\"disabled\")) {\n                stepHandling(step);\n              }\n            } else if (event.which === 40) {\n              // down arrow pressed\n              event.preventDefault();\n\n              if (!$buttonIncrement.prop(\"disabled\")) {\n                stepHandling(-step);\n              }\n            }\n          }\n        }).on(\"keyup\", function (event) {\n          // up/down arrow released\n          if (props.keyboardStepping && (event.which === 38 || event.which === 40)) {\n            event.preventDefault();\n            resetTimer();\n          }\n        }); // decrement button\n\n        onPointerDown($buttonDecrement[0], function () {\n          if (!$buttonDecrement.prop(\"disabled\")) {\n            pointerState = true;\n            stepHandling(-step);\n          }\n        }); // increment button\n\n        onPointerDown($buttonIncrement[0], function () {\n          if (!$buttonIncrement.prop(\"disabled\")) {\n            pointerState = true;\n            stepHandling(step);\n          }\n        });\n        onPointerUp(document.body, function () {\n          if (pointerState === true) {\n            resetTimer();\n            dispatchEvent($original, \"change\");\n            pointerState = false;\n          }\n        });\n      }\n\n      function setValue(newValue, updateInput) {\n        if (updateInput === undefined) {\n          updateInput = true;\n        }\n\n        if (isNaN(newValue) || newValue === \"\") {\n          $original[0].value = \"\";\n\n          if (updateInput) {\n            $input[0].value = \"\";\n          }\n\n          value = NaN;\n        } else {\n          newValue = parseFloat(newValue);\n          newValue = Math.min(Math.max(newValue, min), max);\n          $original[0].value = newValue;\n\n          if (updateInput) {\n            $input[0].value = $original[0].inputSpinnerEditor.render(newValue);\n          }\n\n          value = newValue;\n        }\n      }\n\n      function destroy() {\n        $original.prop(\"required\", $input.prop(\"required\"));\n        observer.disconnect();\n        resetTimer();\n        $input.off(\"paste input change focusout\");\n        $inputGroup.remove();\n        $original.show();\n        $original[0][\"bootstrap-input-spinner\"] = undefined;\n\n        if ($label[0]) {\n          $label.attr(\"for\", $original.attr(\"id\"));\n        }\n      }\n\n      function dispatchEvent($element, type) {\n        if (type) {\n          setTimeout(function () {\n            var event;\n\n            if (typeof Event === 'function') {\n              event = new Event(type, {\n                bubbles: true\n              });\n            } else {\n              // IE\n              event = document.createEvent('Event');\n              event.initEvent(type, true, true);\n            }\n\n            $element[0].dispatchEvent(event);\n          });\n        }\n      }\n\n      function stepHandling(step) {\n        calcStep(step);\n        resetTimer();\n\n        if (props.autoInterval !== undefined) {\n          autoDelayHandler = setTimeout(function () {\n            autoIntervalHandler = setInterval(function () {\n              calcStep(step);\n            }, props.autoInterval);\n          }, props.autoDelay);\n        }\n      }\n\n      function calcStep(step) {\n        if (isNaN(value)) {\n          value = 0;\n        }\n\n        setValue(Math.round(value / step) * step + step);\n        dispatchEvent($original, \"input\");\n      }\n\n      function resetTimer() {\n        clearTimeout(autoDelayHandler);\n        clearTimeout(autoIntervalHandler);\n      }\n\n      function updateAttributes() {\n        // copy properties from original to the new input\n        if ($original.prop(\"required\")) {\n          $input.prop(\"required\", $original.prop(\"required\"));\n          $original.removeAttr('required');\n        }\n\n        $input.prop(\"placeholder\", $original.prop(\"placeholder\"));\n        $input.attr(\"inputmode\", $original.attr(\"inputmode\") || \"decimal\");\n        var disabled = $original.prop(\"disabled\");\n        var readonly = $original.prop(\"readonly\");\n        $input.prop(\"disabled\", disabled);\n        $input.prop(\"readonly\", readonly || props.buttonsOnly);\n        $buttonIncrement.prop(\"disabled\", disabled || readonly);\n        $buttonDecrement.prop(\"disabled\", disabled || readonly);\n\n        if (disabled || readonly) {\n          resetTimer();\n        }\n\n        var originalClass = $original.prop(\"class\");\n        var groupClass = \"\"; // sizing\n\n        if (/form-control-sm/g.test(originalClass)) {\n          groupClass = \"input-group-sm\";\n        } else if (/form-control-lg/g.test(originalClass)) {\n          groupClass = \"input-group-lg\";\n        }\n\n        var inputClass = originalClass.replace(/form-control(-(sm|lg))?/g, \"\");\n        $inputGroup.prop(\"class\", \"input-group \" + groupClass + \" \" + props.groupClass);\n        $input.prop(\"class\", \"form-control \" + inputClass); // update the main attributes\n\n        min = isNaN($original.prop(\"min\")) || $original.prop(\"min\") === \"\" ? -Infinity : parseFloat($original.prop(\"min\"));\n        max = isNaN($original.prop(\"max\")) || $original.prop(\"max\") === \"\" ? Infinity : parseFloat($original.prop(\"max\"));\n        step = parseFloat($original.prop(\"step\")) || 1;\n\n        if ($original.attr(\"hidden\")) {\n          $inputGroup.attr(\"hidden\", $original.attr(\"hidden\"));\n        } else {\n          $inputGroup.removeAttr(\"hidden\");\n        }\n\n        if ($original.attr(\"id\")) {\n          $input.attr(\"id\", $original.attr(\"id\") + \"_MP_cBdLN29i2\");\n\n          if ($label[0]) {\n            $label.attr(\"for\", $input.attr(\"id\"));\n          }\n        }\n      }\n    });\n    return this;\n  };\n\n  function onPointerUp(element, callback) {\n    element.addEventListener(\"mouseup\", function (e) {\n      callback(e);\n    });\n    element.addEventListener(\"touchend\", function (e) {\n      callback(e);\n    });\n    element.addEventListener(\"keyup\", function (e) {\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        triggerKeyPressed = false;\n        callback(e);\n      }\n    });\n  }\n\n  function onPointerDown(element, callback) {\n    element.addEventListener(\"mousedown\", function (e) {\n      if (e.button === 0) {\n        e.preventDefault();\n        callback(e);\n      }\n    });\n    element.addEventListener(\"touchstart\", function (e) {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      callback(e);\n    });\n    element.addEventListener(\"keydown\", function (e) {\n      if ((e.keyCode === 32 || e.keyCode === 13) && !triggerKeyPressed) {\n        triggerKeyPressed = true;\n        callback(e);\n      }\n    });\n  }\n})(jQuery);","map":{"version":3,"sources":["/home/my/jayesh/test-app2/test-app2/node_modules/bootstrap-input-spinner/src/bootstrap-input-spinner.js"],"names":["$","I18nEditor","props","element","locale","parse","customFormat","numberFormat","Intl","NumberFormat","thousandSeparator","format","replace","decimalSeparator","parseFloat","RegExp","render","number","decimals","parseInt","getAttribute","digitGrouping","minimumFractionDigits","maximumFractionDigits","useGrouping","triggerKeyPressed","originalVal","fn","val","value","arguments","length","i","setValue","apply","inputSpinner","methodOrProps","each","destroyInputSpinner","console","warn","decrementButton","incrementButton","groupClass","buttonsClass","buttonsWidth","textAlign","autoDelay","autoInterval","buttonsOnly","keyboardStepping","navigator","language","editor","template","option","html","$original","hide","inputSpinnerEditor","autoDelayHandler","autoIntervalHandler","$inputGroup","$buttonDecrement","find","$buttonIncrement","$input","$label","attr","closest","min","max","step","updateAttributes","pointerState","prefix","suffix","prefixElement","before","suffixElement","after","newValue","destroy","observer","MutationObserver","observe","attributes","on","event","focusOut","type","dispatchEvent","which","preventDefault","prop","stepHandling","resetTimer","onPointerDown","onPointerUp","document","body","updateInput","undefined","isNaN","NaN","Math","disconnect","off","remove","show","$element","setTimeout","Event","bubbles","createEvent","initEvent","calcStep","setInterval","round","clearTimeout","removeAttr","disabled","readonly","originalClass","test","inputClass","Infinity","callback","addEventListener","e","keyCode","button","cancelable","jQuery"],"mappings":"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","sourcesContent":["/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/bootstrap-input-spinner\n * License: MIT, see file 'LICENSE'\n */\n\n;(function ($) {\n    \"use strict\"\n\n    // the default editor for parsing and rendering\n    var I18nEditor = function (props, element) {\n        var locale = props.locale || \"en-US\"\n\n        this.parse = function (customFormat) {\n            var numberFormat = new Intl.NumberFormat(locale)\n            var thousandSeparator = numberFormat.format(11111).replace(/1/g, '') || '.'\n            var decimalSeparator = numberFormat.format(1.1).replace(/1/g, '')\n            return parseFloat(customFormat\n                .replace(new RegExp(' ', 'g'), '')\n                .replace(new RegExp('\\\\' + thousandSeparator, 'g'), '')\n                .replace(new RegExp('\\\\' + decimalSeparator), '.')\n            )\n        }\n\n        this.render = function (number) {\n            var decimals = parseInt(element.getAttribute(\"data-decimals\")) || 0\n            var digitGrouping = !(element.getAttribute(\"data-digit-grouping\") === \"false\")\n            var numberFormat = new Intl.NumberFormat(locale, {\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals,\n                useGrouping: digitGrouping\n            })\n            return numberFormat.format(number)\n        }\n    }\n\n    var triggerKeyPressed = false\n    var originalVal = $.fn.val\n    $.fn.val = function (value) {\n        if (arguments.length >= 1) {\n            for (var i = 0; i < this.length; i++) {\n                if (this[i][\"bootstrap-input-spinner\"] && this[i].setValue) {\n                    this[i].setValue(value)\n                }\n            }\n        }\n        return originalVal.apply(this, arguments)\n    }\n\n    $.fn.inputSpinner = function (methodOrProps) {\n\n        if (methodOrProps === \"destroy\") {\n            this.each(function () {\n                if (this[\"bootstrap-input-spinner\"]) {\n                    this.destroyInputSpinner()\n                } else {\n                    console.warn(\"element\", this, \"is no bootstrap-input-spinner\")\n                }\n            })\n            return this\n        }\n\n        var props = {\n            decrementButton: \"<strong>&minus;</strong>\", // button text\n            incrementButton: \"<strong>&plus;</strong>\", // ..\n            groupClass: \"\", // css class of the resulting input-group\n            buttonsClass: \"btn-outline-secondary\",\n            buttonsWidth: \"2.5rem\",\n            textAlign: \"center\", // alignment of the entered number\n            autoDelay: 500, // ms threshold before auto value change\n            autoInterval: 50, // speed of auto value change, set to `undefined` to disable auto-change\n            buttonsOnly: false, // set this `true` to disable the possibility to enter or paste the number via keyboard\n            keyboardStepping: true, // set this to `false` to disallow the use of the up and down arrow keys to step\n            locale: navigator.language, // the locale, per default detected automatically from the browser\n            editor: I18nEditor, // the editor (parsing and rendering of the input)\n            template: // the template of the input\n                '<div class=\"input-group ${groupClass}\">' +\n                '<button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-decrement ${buttonsClass} btn-minus\" type=\"button\">${decrementButton}</button>' +\n                '<input type=\"text\" inputmode=\"decimal\" style=\"text-align: ${textAlign}\" class=\"form-control form-control-text-input\"/>' +\n                '<button style=\"min-width: ${buttonsWidth}\" class=\"btn btn-increment ${buttonsClass} btn-plus\" type=\"button\">${incrementButton}</button>' +\n                '</div>'\n        }\n\n        for (var option in methodOrProps) {\n            // noinspection JSUnfilteredForInLoop\n            props[option] = methodOrProps[option]\n        }\n\n        var html = props.template\n            .replace(/\\${groupClass}/g, props.groupClass)\n            .replace(/\\${buttonsWidth}/g, props.buttonsWidth)\n            .replace(/\\${buttonsClass}/g, props.buttonsClass)\n            .replace(/\\${decrementButton}/g, props.decrementButton)\n            .replace(/\\${incrementButton}/g, props.incrementButton)\n            .replace(/\\${textAlign}/g, props.textAlign)\n\n        this.each(function () {\n\n            if (this[\"bootstrap-input-spinner\"]) {\n                console.warn(\"element\", this, \"is already a bootstrap-input-spinner\")\n            } else {\n\n                var $original = $(this)\n                $original[0][\"bootstrap-input-spinner\"] = true\n                $original.hide()\n                $original[0].inputSpinnerEditor = new props.editor(props, this)\n\n                var autoDelayHandler = null\n                var autoIntervalHandler = null\n\n                var $inputGroup = $(html)\n                var $buttonDecrement = $inputGroup.find(\".btn-decrement\")\n                var $buttonIncrement = $inputGroup.find(\".btn-increment\")\n                var $input = $inputGroup.find(\"input\")\n                var $label = $(\"label[for='\" + $original.attr(\"id\") + \"']\")\n                if (!$label[0]) {\n                    $label = $original.closest(\"label\")\n                }\n\n                var min = null\n                var max = null\n                var step = null\n\n                updateAttributes()\n\n                var value = parseFloat($original[0].value)\n                var pointerState = false\n\n                var prefix = $original.attr(\"data-prefix\") || \"\"\n                var suffix = $original.attr(\"data-suffix\") || \"\"\n\n                if (prefix) {\n                    var prefixElement = $('<span class=\"input-group-text\">' + prefix + '</span>')\n                    $inputGroup.find(\"input\").before(prefixElement)\n                }\n                if (suffix) {\n                    var suffixElement = $('<span class=\"input-group-text\">' + suffix + '</span>')\n                    $inputGroup.find(\"input\").after(suffixElement)\n                }\n\n                $original[0].setValue = function (newValue) {\n                    setValue(newValue)\n                }\n                $original[0].destroyInputSpinner = function () {\n                    destroy()\n                }\n\n                var observer = new MutationObserver(function () {\n                    updateAttributes()\n                    setValue(value, true)\n                })\n                observer.observe($original[0], {attributes: true})\n\n                $original.after($inputGroup)\n\n                setValue(value)\n\n                $input.on(\"paste input change focusout\", function (event) {\n                    var newValue = $input[0].value\n                    var focusOut = event.type === \"focusout\"\n                    newValue = $original[0].inputSpinnerEditor.parse(newValue)\n                    setValue(newValue, focusOut)\n                    dispatchEvent($original, event.type)\n                }).on(\"keydown\", function (event) {\n                    if (props.keyboardStepping) {\n                        if (event.which === 38) { // up arrow pressed\n                            event.preventDefault()\n                            if (!$buttonDecrement.prop(\"disabled\")) {\n                                stepHandling(step)\n                            }\n                        } else if (event.which === 40) { // down arrow pressed\n                            event.preventDefault()\n                            if (!$buttonIncrement.prop(\"disabled\")) {\n                                stepHandling(-step)\n                            }\n                        }\n                    }\n                }).on(\"keyup\", function (event) {\n                    // up/down arrow released\n                    if (props.keyboardStepping && (event.which === 38 || event.which === 40)) {\n                        event.preventDefault()\n                        resetTimer()\n                    }\n                })\n\n                // decrement button\n                onPointerDown($buttonDecrement[0], function () {\n                    if (!$buttonDecrement.prop(\"disabled\")) {\n                        pointerState = true\n                        stepHandling(-step)\n                    }\n                })\n                // increment button\n                onPointerDown($buttonIncrement[0], function () {\n                    if (!$buttonIncrement.prop(\"disabled\")) {\n                        pointerState = true\n                        stepHandling(step)\n                    }\n                })\n                onPointerUp(document.body, function () {\n                    if(pointerState === true) {\n                        resetTimer()\n                        dispatchEvent($original, \"change\")\n                        pointerState = false\n                    }\n                })\n            }\n\n            function setValue(newValue, updateInput) {\n                if (updateInput === undefined) {\n                    updateInput = true\n                }\n                if (isNaN(newValue) || newValue === \"\") {\n                    $original[0].value = \"\"\n                    if (updateInput) {\n                        $input[0].value = \"\"\n                    }\n                    value = NaN\n                } else {\n                    newValue = parseFloat(newValue)\n                    newValue = Math.min(Math.max(newValue, min), max)\n                    $original[0].value = newValue\n                    if (updateInput) {\n                        $input[0].value = $original[0].inputSpinnerEditor.render(newValue)\n                    }\n                    value = newValue\n                }\n            }\n\n            function destroy() {\n                $original.prop(\"required\", $input.prop(\"required\"))\n                observer.disconnect()\n                resetTimer()\n                $input.off(\"paste input change focusout\")\n                $inputGroup.remove()\n                $original.show()\n                $original[0][\"bootstrap-input-spinner\"] = undefined\n                if ($label[0]) {\n                    $label.attr(\"for\", $original.attr(\"id\"))\n                }\n            }\n\n            function dispatchEvent($element, type) {\n                if (type) {\n                    setTimeout(function () {\n                        var event\n                        if (typeof (Event) === 'function') {\n                            event = new Event(type, {bubbles: true})\n                        } else { // IE\n                            event = document.createEvent('Event')\n                            event.initEvent(type, true, true)\n                        }\n                        $element[0].dispatchEvent(event)\n                    })\n                }\n            }\n\n            function stepHandling(step) {\n                calcStep(step)\n                resetTimer()\n                if(props.autoInterval !== undefined) {\n                    autoDelayHandler = setTimeout(function () {\n                        autoIntervalHandler = setInterval(function () {\n                            calcStep(step)\n                        }, props.autoInterval)\n                    }, props.autoDelay)\n                }\n            }\n\n            function calcStep(step) {\n                if (isNaN(value)) {\n                    value = 0\n                }\n                setValue(Math.round(value / step) * step + step)\n                dispatchEvent($original, \"input\")\n            }\n\n            function resetTimer() {\n                clearTimeout(autoDelayHandler)\n                clearTimeout(autoIntervalHandler)\n            }\n\n            function updateAttributes() {\n                // copy properties from original to the new input\n                if ($original.prop(\"required\")) {\n                    $input.prop(\"required\", $original.prop(\"required\"))\n                    $original.removeAttr('required')\n                }\n                $input.prop(\"placeholder\", $original.prop(\"placeholder\"))\n                $input.attr(\"inputmode\", $original.attr(\"inputmode\") || \"decimal\")\n                var disabled = $original.prop(\"disabled\")\n                var readonly = $original.prop(\"readonly\")\n                $input.prop(\"disabled\", disabled)\n                $input.prop(\"readonly\", readonly || props.buttonsOnly)\n                $buttonIncrement.prop(\"disabled\", disabled || readonly)\n                $buttonDecrement.prop(\"disabled\", disabled || readonly)\n                if (disabled || readonly) {\n                    resetTimer()\n                }\n                var originalClass = $original.prop(\"class\")\n                var groupClass = \"\"\n                // sizing\n                if (/form-control-sm/g.test(originalClass)) {\n                    groupClass = \"input-group-sm\"\n                } else if (/form-control-lg/g.test(originalClass)) {\n                    groupClass = \"input-group-lg\"\n                }\n                var inputClass = originalClass.replace(/form-control(-(sm|lg))?/g, \"\")\n                $inputGroup.prop(\"class\", \"input-group \" + groupClass + \" \" + props.groupClass)\n                $input.prop(\"class\", \"form-control \" + inputClass)\n\n                // update the main attributes\n                min = isNaN($original.prop(\"min\")) || $original.prop(\"min\") === \"\" ? -Infinity : parseFloat($original.prop(\"min\"))\n                max = isNaN($original.prop(\"max\")) || $original.prop(\"max\") === \"\" ? Infinity : parseFloat($original.prop(\"max\"))\n                step = parseFloat($original.prop(\"step\")) || 1\n                if ($original.attr(\"hidden\")) {\n                    $inputGroup.attr(\"hidden\", $original.attr(\"hidden\"))\n                } else {\n                    $inputGroup.removeAttr(\"hidden\")\n                }\n                if ($original.attr(\"id\")) {\n                    $input.attr(\"id\", $original.attr(\"id\") + \"_MP_cBdLN29i2\")\n                    if ($label[0]) {\n                        $label.attr(\"for\", $input.attr(\"id\"))\n                    }\n                }\n            }\n        })\n\n        return this\n    }\n\n    function onPointerUp(element, callback) {\n        element.addEventListener(\"mouseup\", function (e) {\n            callback(e)\n        })\n        element.addEventListener(\"touchend\", function (e) {\n            callback(e)\n        })\n        element.addEventListener(\"keyup\", function (e) {\n            if ((e.keyCode === 32 || e.keyCode === 13)) {\n                triggerKeyPressed = false\n                callback(e)\n            }\n        })\n    }\n\n    function onPointerDown(element, callback) {\n        element.addEventListener(\"mousedown\", function (e) {\n            if (e.button === 0) {\n                e.preventDefault()\n                callback(e)\n            }\n        })\n        element.addEventListener(\"touchstart\", function (e) {\n            if (e.cancelable) {\n                e.preventDefault()\n            }\n            callback(e)\n        })\n        element.addEventListener(\"keydown\", function (e) {\n            if ((e.keyCode === 32 || e.keyCode === 13) && !triggerKeyPressed) {\n                triggerKeyPressed = true\n                callback(e)\n            }\n        })\n    }\n\n}(jQuery))\n"]},"metadata":{},"sourceType":"script"}