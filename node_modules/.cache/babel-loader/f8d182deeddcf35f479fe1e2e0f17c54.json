{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from '../Components/home';\nimport Login from '../Components/login';\nimport ProductDetail from '../Components/product/ProductDetail';\nimport ProductPage from '../Components/product/productPage'; // import axios from 'axios';\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdate = value => {\n      this.setState({\n        isUserAthanticated: value\n      });\n    };\n\n    this.state = {\n      isUserAthanticated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"hasfdjfs\"\n    }, void 0, false) // <Router>\n    //   <Routes>\n    //     {/* <Route exact path=\"/\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n    //     {/* <Route exact path=\"/shop\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n    //     {/* <Route exact path=\"/products\" element={<ProductPage updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>}/> */}\n    //     {/* <Route exact path=\"/products/:productId\" element={<ProductDetail updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>}/> */}\n    //     {/* <Route exact path=\"/pages\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n    //     <Route exact path=\"/blog\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n    //     <Route exact path=\"/elements\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n    //     <Route path=\"/login\" element={ <Login  updateState={this.handleUpdate} changeState={this.changestate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n    //     <Route path=\"/logout\" element={ <Login  updateState={this.handleUpdate} changeState={this.changestate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n    //     {/* <Navigate to=\"/\" element={<Home />} /> */}\n    //   </Routes>\n    // </Router>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/my/jayesh/test-app2/test-app2/src/app/App.js"],"names":["React","BrowserRouter","Router","Routes","Route","Home","Login","ProductDetail","ProductPage","App","Component","constructor","props","handleUpdate","value","setState","isUserAthanticated","state","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAsD,kBAAtD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,WAAP,MAAwB,mCAAxB,C,CACA;;;;;AACA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,YAPkB,GAOFC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAEF;AAAtB,OAAd;AACD,KATiB;;AAEhB,SAAKG,KAAL,GAAa;AACXD,MAAAA,kBAAkB,EAAE;AADT,KAAb;AAGD;;AAODE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA,qBADF,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAmBD;;AAjC+B;;AAoClC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport Home from '../Components/home';\nimport Login from '../Components/login';\nimport ProductDetail from '../Components/product/ProductDetail';\nimport ProductPage from '../Components/product/productPage';\n// import axios from 'axios';\nclass App extends React.Component {\n  constructor(props){  \n    super(props);  \n    this.state = {  \n      isUserAthanticated: false\n    }\n  }\n\n  handleUpdate = (value) => {\n    this.setState({ isUserAthanticated: value })\n  }\n\n  \n  render(){\n    return (\n      <>\n        hasfdjfs\n      </>\n      // <Router>\n      //   <Routes>\n      //     {/* <Route exact path=\"/\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n      //     {/* <Route exact path=\"/shop\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n      //     {/* <Route exact path=\"/products\" element={<ProductPage updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>}/> */}\n      //     {/* <Route exact path=\"/products/:productId\" element={<ProductDetail updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>}/> */}\n      //     {/* <Route exact path=\"/pages\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n      //     <Route exact path=\"/blog\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n      //     <Route exact path=\"/elements\" element={<Home updateState={this.handleUpdate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n      //     <Route path=\"/login\" element={ <Login  updateState={this.handleUpdate} changeState={this.changestate} isUserAthanticated={this.state.isUserAthanticated}/>} />\n      //     <Route path=\"/logout\" element={ <Login  updateState={this.handleUpdate} changeState={this.changestate} isUserAthanticated={this.state.isUserAthanticated}/>} /> */}\n      //     {/* <Navigate to=\"/\" element={<Home />} /> */}\n      //   </Routes>\n      // </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}